from typing import Any

class GpgError(Exception):

    error: Any | None
    context: str | None
    result: Any | None

    @property
    def code(self) -> int: ...
    @property
    def code_str(self) -> str: ...
    @property
    def source(self) -> int: ...
    @property
    def source_str(self) -> str: ...

class GPGMEError(GpgError):
    @property
    def message(self) -> str: ...
    def getstring(self) -> str: ...
    def getcode(self) -> int: ...
    def getsource(self) -> int: ...

class KeyNotFound(GPGMEError, KeyError):
    keystr: str

class EncryptionError(GpgError): ...
class InvalidRecipients(EncryptionError): ...
class DecryptionError(GpgError): ...
class UnsupportedAlgorithm(DecryptionError): ...
class SigningError(GpgError): ...
class InvalidSigners(SigningError): ...
class VerificationError(GpgError): ...
class BadSignatures(VerificationError): ...
class MissingSignatures(VerificationError): ...
